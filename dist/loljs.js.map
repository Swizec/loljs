{"version":3,"file":"loljs.js","sources":["../src/lol.js"],"sourcesContent":["\"use strict\";\n\nconst parser = require('../parser')\n\n\nvar lol = function (onDone, onPaused) {\n\n    /**\n     * Interpreter scope data/stack.\n     * Each level of scope consists of a program symbol table and some\n     * 'special' symbols, like return value\n     *\n     * See _push for exact properties.\n     */\n    this._scope = [];\n\n    /**\n     * A stack of actions waiting for attention. An action is (roughly)\n     * a set of nodes which need evaluating, and a callback to receive\n     * the results of their evaluation.\n     *\n     * See _waitFor for exact properties.\n     */\n    this._next = [];\n\n    /**\n     * Default IO functions.\n     * Use console.log for output, and prompt() for input.\n     *\n     * These can (and should) be overridden.\n     */\n    this._io = {\n        visible: function (var_args) {\n            if (!console || typeof console.log !== 'function') {\n                throw new Error('console.log() not available');\n            }\n            console.log.apply(console, lol.utils.argsArray(arguments));\n        },\n        prompt: function (message, reply) {\n            var response;\n            if (typeof prompt === 'function') {\n                response = prompt(message);\n            } else {\n                throw new Error('prompt() not available');\n            }\n            reply(response);\n        }\n    };\n\n    this._isPaused = false;\n\n    this._done = onDone || function () {};\n    this._paused = onPaused || function () {};\n\n    this._currentNode = null;\n\n    this._errors = [];\n};\n\n/**\n * Async deferral function.\n *\n * Defers an action to execute only after a set of nodes has been evaluated.\n * Nodes will be evaluated in the order given.\n */\nlol.prototype._waitFor = function (nodes, f, options) {\n    options = options || {\n        setIt: false,\n        breakOnReturn: false\n    };\n    this._next.push({\n        nodes: nodes.slice(0),\n        results: [],\n        f: f,\n        options: options,\n        inProgress: false\n    });\n};\n\n/**\n * Handles an action created with _waitFor.\n */\nlol.prototype._current = function (current) {\n    var self = this;\n    var node = current.nodes.shift();\n    if (!node) {\n        if (current.inProgress) {\n            return;\n        } else {\n            // special case: there were no arguments.\n            current.f(current.results);\n            self._currentNode = null;\n            return;\n        }\n    }\n\n    current.inProgress = true;\n\n    this._evaluate(node, function (ret) {\n        if (current.options.setIt) {\n            self._setSymbol('IT', ret);\n        }\n        current.results.push(ret);\n        if (!current.nodes.length || (current.options.breakOnReturn &&\n                typeof self._getSpecial('return') !== 'undefined')) {\n            current.f(current.results);\n            self._currentNode = null;\n        } else {\n            self._current(current);\n        }\n    });\n}\n\n\nlol.prototype.next = function () {\n    if (this.errors().length) {\n        // nope\n        this.pause();\n        return;\n    }\n    this._isPaused = false;\n    var current = this._next.pop();\n    if (current) {\n        this._current(current);\n    }\n};\n\n\nlol.prototype.resume = function () {\n    this._isPaused = false;\n    this.tick.go();\n}\n\nlol.prototype.pause = function (keepQuiet) {\n    this._isPaused = true;\n    if (!keepQuiet) {\n        this._paused.call(this);\n    }\n}\n\nlol.prototype._error = function (err) {\n    this._errors.push(err);\n    this.tick.cancel();\n    this.pause();\n}\n\n\nlol.prototype.errors = function () {\n    return this._errors;\n}\n\nlol.prototype.pos = function () {\n    var c = this._currentNode._location;\n    return {\n        line: c.first_line - 1,\n        col: c.first_column,\n        lineEnd: c.last_line - 1,\n        colEnd: c.last_column\n    };\n}\n\nlol.prototype._push = function (s) {\n    if (!s.name) {\n        throw new Error('Scope must have name');\n    }\n    s.symbols = s.symbols || {};\n    s.listeners = s.listeners || [];\n    s.symbols.IT = null;\n    this._scope.push(s);\n};\n\nlol.prototype._pop = function (name) {\n    var popped = this._scope.pop();\n    if (!popped || popped.name !== name) {\n        var msg = \"Couldn't pop state \" + name + '.\\nStack:\\n';\n        while (popped) {\n            msg += popped.name + '\\n';\n            popped = this._scope.pop();\n        }\n        throw new Error(msg);\n    }\n};\n\nlol.prototype.getSymbol = function (name) {\n    var scope = this._scope;\n    for (var i = scope.length - 1; i >= 0; i--) {\n        if (scope[i].symbols.hasOwnProperty(name)) {\n            return scope[i].symbols[name];\n        }\n    }\n    throw new Error('No such symbol: ' + name);\n};\nlol.prototype._setSymbol = function (name, value) {\n    var scope = this._scope;\n    for (var i = scope.length - 1; i >= 0; i--) {\n        if (scope[i].symbols.hasOwnProperty(name)) {\n            scope[i].symbols[name] = value;\n            return;\n        }\n    }\n    scope[scope.length - 1].symbols[name] = value;\n}\n\n/**\n * Returns the nearest scope with the given name.\n * If name is a string, the highest instance of that scope is returned.\n * If name is an array, the highest instance of any of the given scopes is returned.\n * If name is not given, the current scope is returned.\n */\nlol.prototype._findScope = function (name) {\n    var scope = this._scope;\n\n    if (!name) {\n        return scope[scope.length - 1];\n    }\n\n    var isS = typeof name === 'string';\n    for (var i = scope.length - 1; i >= 0; i--) {\n        if (isS && scope[i].name === name) {\n            return scope[i];\n        } else if (!isS && name.indexOf(scope[i].name) >= 0) {\n            return scope[i];\n        }\n    }\n    return null;\n};\n\nlol.prototype._findScopeForSpecial = function (symbol) {\n    if (symbol === 'return') {\n        return this._findScope('function');\n    } else if (symbol === 'switch-condition') {\n        return this._findScope('switch');\n    } else if (symbol === 'broken') {\n        return this._findScope(['switch', 'loop'])\n    } else {\n        return this._scope[this._scope.length - 1];\n    }\n}\n\nlol.prototype._setSpecial = function (name, value) {\n    var s = this._findScopeForSpecial(name);\n    if (s) {\n        s[name] = value;\n    } else {\n        //         debugger;\n    }\n};\n\nlol.prototype._getSpecial = function (name) {\n    var s = this._findScopeForSpecial(name);\n    if (s) {\n        return s[name];\n    } else {\n        //         debugger;\n    }\n};\n\nlol.prototype._listen = function (event, action) {\n    this._findScope().listeners.push({\n        event: event,\n        action: action\n    });\n};\n\nlol.prototype._emit = function (event) {\n    var brk = false;\n    for (var i = this._scope.length - 1; i >= 0 && !brk; i--) {\n        var s = this._scope[i];\n        for (var j = 0; j < s.listeners.length && !brk; j++) {\n            var l = s.listeners[j];\n            if (l.event === event && l.action()) {\n                brk = true;\n            }\n        }\n    }\n    return brk;\n}\n\n\nlol.prototype._index = function (val, index) {\n    if (!val || typeof val.length === 'undefined') {\n        throw new Error('Not indexable');\n    }\n    var normalisedIndex = index;\n    while (normalisedIndex < 0) {\n        normalisedIndex += val.length;\n    }\n\n    if (typeof val === 'string') {\n        return val.charAt(normalisedIndex);\n    } else if (Object.prototype.toString.call(val) === '[object Array]') {\n        if (normalisedIndex < val.length) {\n            return val[normalisedIndex];\n        } else {\n            throw new Error('Index ' + index + ' out of range');\n        }\n    } else {\n        throw new Error('Not indexable');\n    }\n};\n\nlol.prototype._setIndex = function (obj, val, index) {\n    // Note this won't actually work for strings yet because they're immutable\n    // We'll get back a different string than we sent in, which makes it\n    // pretty much useless to the caller in the context of writing to a variable\n    // The answer is probably to switch all internal value representations to\n    // objects wrapping JS primitives so we end up with references.\n\n    if (!obj || typeof obj.length === 'undefined') {\n        throw new Error('Not indexable');\n    }\n    if (Object.prototype.toString.call(obj) === '[object Array]') {\n        while (index > obj.length - 1) {\n            obj.push(null);\n        }\n        obj[index] = val;\n        return val;\n    } else {\n        throw new Error('Not indexable');\n    }\n};\n\n\n/*****************************************************************************\n *  NODE EVALUATION FUNCTIONS\n ****************************************************************************/\n\nlol.prototype._evaluateLiteral = function (node, done) {\n    var self = this;\n    if (Object.prototype.toString.call(node.value) === '[object Array]') {\n        this._waitFor(node.value, function (values) {\n            done(values);\n        })\n    } else if (typeof node.value === 'string') {\n        done(node.value.replace(/:\\{([\\w_]+)\\}/g, function ($0, $1) {\n            var v = $1;\n            var replacement = $0;\n            try {\n                replacement = self.getSymbol(v);\n            } catch (e) {\n                self._error('No such symbol: ' + v);\n            }\n            return replacement;\n        }));\n    } else {\n        done(node.value);\n    }\n};\n\nlol.prototype._evaluateIndexer = function (node, done) {\n    var self = this;\n    this._waitFor([node.lhs, node.rhs], function (vals) {\n        var lhs = vals[0],\n            rhs = vals[1];\n        var index = self._index(lhs, rhs);\n        done(index);\n    });\n};\n\nlol.prototype._evaluateFunctionCall = function (node, done) {\n    var self = this;\n    this._waitFor(node.args.values, function (args) {\n        var f;\n        try {\n            f = self.getSymbol(node.name);\n            if (typeof f !== 'function') {\n                throw new Error(node.name + ' is not a function');\n            }\n        } catch (err) {\n            self._error('' + err);\n            return;\n        }\n        self._callFunction(f, args, done);\n    });\n};\n\nlol.prototype._evaluateBody = function (node, done) {\n    this._waitFor(node.lines, function (lines) {\n        var ret = lines[lines.length - 1];\n        if (typeof ret === 'undefined') {\n            ret = null;\n        }\n        done(ret);\n    }, {\n        setIt: true,\n        breakOnReturn: true\n    });\n};\n\nlol.prototype._evaluateIdentifier = function (node, done) {\n    var s;\n    try {\n        s = this.getSymbol(node.name);\n    } catch (err) {\n        this._error('' + err);\n        return;\n    }\n    if (typeof s === 'function') {\n        // special case - s is a function. We should\n        // probably invoke it?\n        this._callFunction(s, [], done);\n        return;\n    }\n    done(s);\n};\n\nlol.prototype._evaluateAssignmentIndex = function (node, val, done) {\n    var self = this;\n    var path = [];\n    this._waitFor([node.name.lhs, node.name.rhs, node.value], function (vals) {\n        var lhs = vals[0],\n            rhs = vals[1],\n            value = vals[2];\n        self._setIndex(lhs, value, rhs);\n        done(value);\n    });\n};\n\nlol.prototype._evaluateAssignmentNormal = function (node, val, done) {\n    this._setSymbol(node.name, val);\n    done(val);\n}\n\nlol.prototype._evaluateAssignment = function (node, done) {\n\n    var self = this;\n    this._waitFor([node.value], function (values) {\n        var val = values[0];\n        if (node.name._name === 'Indexer') {\n            self._evaluateAssignmentIndex(node, val, done);\n        } else {\n            self._evaluateAssignmentNormal(node, val, done);\n        }\n    });\n};\n\nlol.prototype.evaluate = function (node, done) {\n    var self = this;\n    this._waitFor([node.value], function (values) {\n        self._setSymbol(node.name, values[0]);\n        done(values[0]);\n    });\n};\n\nlol.prototype._evaluateDeclaration = function (node, done) {\n    var self = this;\n    if (node.value) {\n        this._waitFor([node.value], function (values) {\n            self._setSymbol(node.name, values[0]);\n            done(values[0]);\n        });\n    } else {\n        self._setSymbol(node.name, null);\n        done(null);\n    }\n};\n\n\nlol.prototype._evaluateIf = function (node, done) {\n    var self = this;\n    var c = node.condition;\n\n    var eIfs = node.elseIfs.slice(0);\n\n    var eCondition = function (done) {\n        if (c) {\n            self._waitFor([c], done);\n        } else {\n            done(self.getSymbol('IT'));\n        }\n    }\n\n    var eBody = function (done) {\n        self._waitFor([node.body], function () {\n            done(null);\n        });\n    }\n\n    var elseIfs = function (done) {\n        var e = eIfs.shift();\n        if (!e) {\n            done(false);\n        } else {\n            self._waitFor([e.condition], function (v) {\n                if (v[0]) {\n                    self._waitFor([e.body], function (v) {\n                        done(true);\n                    });\n                } else {\n                    // recurse\n                    elseIfs(done);\n                }\n            });\n        }\n    }\n\n    eCondition(function (e) {\n        if (e) {\n            eBody(done);\n        } else {\n            elseIfs(function (elseIfMatched) {\n                if (!elseIfMatched && node.elseBody) {\n                    self._waitFor([node.elseBody], done);\n                } else {\n                    done(null);\n                }\n            });\n        }\n    });\n};\n\nlol.prototype._evaluateNoOp = function (node, done) {\n    // terminal.\n    done(null);\n};\n\nlol.prototype._evaluateLoopCondition = function (node, done) {\n    var self = this;\n    // Loops can have an empty condition, which is the equivalent of\n    // while(true) {}.\n    // It's easier to handle that here than the loop node.\n    if (!node) {\n        done(true);\n    } else {\n        this._waitFor([node.expression], function (vals) {\n            done((node.check === 'while') ? vals[0] : !vals[0]);\n        });\n    }\n}\n\nlol.prototype._evaluateLoop = function (node, done) {\n    var self = this;\n    if (node.op) {\n        try {\n            var symbol = this.getSymbol(node.op.symbol);\n        } catch (err) {\n            // initialise the loop symbol to 0 if it's not defined yet.\n            this._setSymbol(node.op.symbol, 0);\n        }\n    }\n    self._push({\n        name: 'loop'\n    });\n    self._setSpecial('broken', false);\n\n    var evalOp = function () {\n        if (node.op) {\n            var sym = self.getSymbol(node.op.symbol);\n            sym = (node.op.command = 'inc' ? sym + 1 : sym - 1);\n            self._setSymbol(node.op.symbol, sym);\n        }\n    }\n\n    var evalBody = function (done) {\n        self._waitFor([node.body], done);\n    };\n\n    var finish = function () {\n        self._pop('loop');\n        done(null);\n    }\n\n    var loop = function () {\n        self._waitFor([node.condition], function (vals) {\n            var broken = self._getSpecial('broken');\n            if ((node.condition === null || vals[0]) && !broken) {\n                evalBody(function () {\n                    evalOp();\n                    loop();\n                });\n            } else {\n                finish();\n            }\n        });\n    }\n\n    this._listen('break', function () {\n        finish();\n        return true;\n    });\n    loop();\n}\n\nlol.prototype._callFunction = function (f, args, done) {\n    var self = this;\n\n    this._push({\n        name: 'function',\n        symbol: f\n    });\n\n    if (!f._data || f._data.builtIn) {\n        var ret = f.apply(self, args);\n        this._pop('function');\n        done(ret);\n\n        return;\n    }\n    for (var i = 0; i < f._data.args.length; i++) {\n        this._setSymbol(f._data.args[i],\n            typeof args[i] === 'undefined' ? null : args[i]);\n    }\n\n    f.call(self, function (ret) {\n        self._pop('function');\n        done(ret);\n    });\n};\n\n\nlol.prototype._evaluateFunctionDefinition = function (node, done) {\n    // terminal\n\n    // we can keep consistency with natively implemented functions\n    // by implementing the evaluation of a function as a function.\n    // In other words: yo dawg, we heard you liked functions so we\n    // put a function in your function so you can _evaluate while you\n    // _evaluate.\n\n    // The difference is that user defined functions are non-terminals and\n    // therefore are asynchronous, whereas native functions are terminals\n    // and return their value. So the caller knows how to handle both, we'll\n    // add an async property to the function. This should be ok.\n\n    var f = function (done) {\n        // The caller MUST set 'this'. We cannot rely on a 'self' variable in\n        // the parent scope, because this introduces horrible, horrible bugs if\n        // this object is cloned (i.e. this function will alter the state of a\n        // different lol interpreter).\n        if (!(this instanceof lol)) {\n            debugger;\n        }\n        // We can use one for the next function though, as long as 'this' is\n        // now correct.\n        var self = this;\n        this._waitFor([node.body], function (lines) {\n            var ret = self._getSpecial('return');\n            if (typeof ret === 'undefined') {\n                ret = self.getSymbol('IT');\n            }\n            if (typeof ret === 'undefined') {\n                ret = null;\n            }\n            done(ret);\n        });\n    };\n    f._data = {\n        builtIn: false,\n        args: node.args.slice(0),\n        name: node.name\n    };\n\n\n    this._setSymbol(node.name, f, {\n        setIt: true\n    });\n    done(null);\n}\n\nlol.prototype._evaluateCast = function (node, done) {\n    var self = this;\n    this._waitFor([node.expression], function (vals) {\n        var raw = vals[0];\n        var type = node.type.toUpperCase();\n        if (type === 'TROOF') {\n            raw = !!raw;\n        } else if (type === 'NOOB') {\n            raw = null;\n        } else if (type === 'YARN') {\n            raw = lol.utils.toYarn(raw);\n        } else if (type === 'NUMBR' || type === 'NUMBAR') {\n            raw = Number(raw);\n        } else {\n            throw new Error('Unrecognised type: ' + type);\n        }\n        done(raw);\n    });\n}\n\nlol.prototype._evaluateVisible = function (node, done) {\n    var self = this;\n    this._waitFor([node.expression], function (vals) {\n        self._io.visible(lol.utils.toYarn(vals[0]));\n        done(vals[0]);\n    });\n};\nlol.prototype._evaluateGimmeh = function (node, done) {\n    // terminal\n    var self = this;\n    this._io.prompt('', function (reply) {\n        self._setSymbol(node.variable, reply);\n        done(reply);\n    });\n};\n\nlol.prototype._evaluateReturn = function (node, done) {\n    var self = this;\n    this._waitFor([node.expression], function (vals) {\n        self._setSpecial('return', vals[0])\n        done(vals[0]);\n    });\n};\n\nlol.prototype._evaluateSwitch = function (node, done) {\n    var self = this;\n    var it = self.getSymbol('IT');\n    this._push({\n        name: 'switch',\n        'switch-condition': it,\n        broken: false\n    });\n    var branches = node.branches.slice(0);\n    branches.reverse();\n    // branches is now a stack\n\n    var fall = false;\n\n    function finish() {\n        self._pop('switch');\n        done();\n    }\n\n    function next() {\n        var b = branches.pop();\n        if (!b || self._getSpecial('broken')) {\n            finish();\n            return;\n        }\n        if (b._name === 'CaseDefault' || fall) {\n            evalBranch(b);\n        } else {\n            // branch is a normal case statement and has an expression\n            self._waitFor([b.condition], function (vals) {\n                var c = vals[0];\n\n                if (lol.builtIns['BOTH SAEM'](c, it)) {\n                    evalBranch(b);\n                } else {\n                    next();\n                }\n            });\n        }\n    }\n\n    function evalBranch(b) {\n        self._waitFor([b.body], function (vals) {\n            fall = !self._getSpecial('broken');\n            next();\n        });\n    }\n\n    this._listen('break', function () {\n        finish();\n        return true;\n    });\n\n    next();\n\n};\n\nlol.prototype._evaluateBreak = function (node, done) {\n    this._setSpecial('broken', true);\n    if (this._emit('break')) {\n        // Intentionally do not call done() - this branch is now dead.\n        // Execution was resumed by listeners on the break event.\n    } else {\n        debugger;\n        // no-one picked it up - we're not in a loop/switch\n        done();\n    }\n};\n\nlol.prototype._evaluateBreakpoint = function (node, done) {\n    this.pause();\n    done();\n}\n\nlol.prototype._evaluate = function (node, done) {\n    this._currentNode = node;\n\n    var handlers = {\n        'Assignment': this._evaluateAssignment,\n        'Break': this._evaluateBreak,\n        'Breakpoint': this._evaluateBreakpoint,\n        'Body': this._evaluateBody,\n        'Cast': this._evaluateCast,\n        'Declaration': this._evaluateDeclaration,\n        'FunctionCall': this._evaluateFunctionCall,\n        'FunctionDefinition': this._evaluateFunctionDefinition,\n        'Gimmeh': this._evaluateGimmeh,\n        'Identifier': this._evaluateIdentifier,\n        'If': this._evaluateIf,\n        'Indexer': this._evaluateIndexer,\n        'Literal': this._evaluateLiteral,\n        'Loop': this._evaluateLoop,\n        'LoopCondition': this._evaluateLoopCondition,\n        'NoOp': this._evaluateNoOp,\n        'Return': this._evaluateReturn,\n        'Switch': this._evaluateSwitch,\n        'Visible': this._evaluateVisible\n    };\n\n    var handler = handlers[node._name];\n    if (!handler) {\n        throw new Error('Not implemented: ' + node._name);\n    } else {\n        handler.call(this, node, done);\n    }\n}\n\nlol.prototype._pushProgramState = function () {\n    // clone built ins, otherwise they're a reference to a static property,\n    // i.e. a program could overwrite them and break them for all subsequent\n    // executions.\n    // I think keeping a reference to the function is fine though, there\n    // shouldn't be any potential to escape the interpreter to modify that.\n    var symbols = {};\n    for (var name in lol.builtIns) {\n        if (lol.builtIns.hasOwnProperty(name)) {\n            symbols[name] = lol.builtIns[name];\n        }\n    }\n    this._push({\n        name: 'program',\n        symbols: symbols\n    });\n}\n\nlol.prototype._reset = function () {\n    this._scope.length = 0;\n    this._next.length = 0;\n    this._pushProgramState();\n    this._errors.length = 0;\n    this._isPaused = false;\n    this._currentNode = null;\n};\n\n\nlol.prototype.evaluateWatchExpression = function (tree, done, error) {\n    function cloneObj(s) {\n        // The symbol table is a reference copy rather than a clone.\n        // This is probably okay, as it means that the watch expressions\n        // can change the program's state.\n        var s_ = {};\n        for (var name in s) {\n            if (s.hasOwnProperty(name)) {\n                var o = s[name];\n                var cloned = o;\n                s_[name] = o;\n            }\n        }\n        return s_;\n    }\n\n    var l = new lol(done, error);\n    l._io = this._io;\n    l._scope = this._scope.map(function (s) {\n        return cloneObj(s);\n    });\n    if (!l._scope.length) {\n        l._pushProgramState();\n    }\n    l.evaluate(tree, true);\n}\n\n\n\nlol.prototype.evaluate = function (tree, dontReset) {\n    var self = this;\n\n    if (!dontReset) {\n        this._reset();\n    }\n    var done = false;\n    this._evaluate(tree, function (ret) {\n        done = true;\n        self._done.call(self, ret);\n    });\n\n    // We evaluate things asynchronously so we don't crash the browser if the\n    // user has entered an infinite loop.\n    // We also allow arbitrary breakpoints, which makes things a bit more\n    // complicated.\n\n    // To keep things fairly transparent to the caller, we handle here a loop\n    // (called the tick), which is responsible for progressing the program\n    // in chunks, and scheduling itself to continue.\n    // That's what this next bit is all about.\n\n    // if there's already an active ticker, cancel it so it won't do any more,\n    // then replace it\n\n    if (this.tick) {\n        this.tick.cancel();\n    }\n\n    this.tick = {\n        _cancel: false,\n        _isRunning: false,\n        cancel: function () {\n            this._cancel = true;\n        },\n\n        _go: function () {\n            var thisTick = this;\n\n            // Let's try not to block for more than 200ms at a time.\n            // There is a balance here between keeping a totally responsive UI and not\n            // taking all year to execute a simple program because we're forever\n            // scheduling execution for the future.\n            if (this._cancel || self._isPaused) {\n                this._isRunning = false;\n                return;\n            }\n\n            this._isRunning = true;\n            var s = +new Date();\n            while (!done && (+new Date() - s < 200) && !self._isPaused) {\n                self.next();\n            }\n            if (!done) {\n                lol.utils.nextTick(function () {\n                    thisTick._go();\n                });\n            } else {\n                this._isRunning = false;\n            }\n        },\n\n        go: function () {\n            if (!this._isRunning) {\n                this._go();\n            }\n        }\n    };\n    this.tick.go();\n};\n\nlol.prototype.setIo = function (object) {\n    if (typeof object.visible === 'function') {\n        this._io.visible = object.visible;\n    }\n    if (typeof object.prompt === 'function') {\n        this._io.prompt = object.prompt;\n    }\n};\n\n\n/**\n * Static functions\n */\nlol.utils = {\n    toYarn: function (val) {\n        if (val === true) {\n            return 'WIN';\n        } else if (val === false) {\n            return 'FAIL';\n        } else if (val === null) {\n            return 'NOOB';\n        } else if (Object.prototype.toString.call(val) === '[object Array]') {\n            var ret = '[';\n            for (var i = 0; i < val.length; i++) {\n                ret += lol.utils.toYarn(val[i]);\n                if (i !== val.length - 1) {\n                    ret += ', '\n                }\n            }\n            ret += ']';\n            return ret;\n        } else return '' + val;\n    }\n};\n\n/**\n * Converts an arguments object as a proper array.\n */\nlol.utils.argsArray = function (a) {\n    return Array.prototype.slice.call(a);\n};\n\n\n/**\n * LOLCODE built in functions.\n */\nlol.builtIns = {\n    'NOT': function (a) {\n        return !a;\n    },\n    'ANY OF': function (var_args) {\n        var args = lol.utils.argsArray(arguments);\n        for (var i = 0; i < args.length; i++) {\n            if (args[i]) {\n                return true;\n            }\n        }\n        return false;\n    },\n    'BIGGR OF': function (a, b) {\n        return Math.max(a, b);\n    },\n    'SMALLR OF': function (a, b) {\n        return Math.min(a, b);\n    },\n    'SUM OF': function (a, b) {\n        return a + b;\n    },\n    'DIFF OF': function (a, b) {\n        return a - b;\n    },\n    'PRODUKT OF': function (a, b) {\n        return a * b;\n    },\n    'QUOSHUNT OF': function (a, b) {\n        return a / b;\n    },\n    'BOTH OF': function (a, b) {\n        return a && b;\n    },\n    'EITHER OF': function (a, b) {\n        return a || b;\n    },\n    'BOTH SAEM': function (a, b) {\n        return a === b;\n    },\n    'SMOOSH': function (var_args) {\n        var args = lol.utils.argsArray(arguments);\n        return lol.utils.toYarn(args.reduce(function (a, b) {\n            return lol.utils.toYarn(a) + lol.utils.toYarn(b);\n        }));\n    },\n    'BIGGR THAN': function (a, b) {\n        return a > b;\n    },\n    'SMALLR THAN': function (a, b) {\n        return a < b;\n    },\n    'MOD OF': function (a, b) {\n        return a % b;\n    },\n    'LEN OF': function (a) {\n        return a && typeof a.length !== 'undefined' ? a.length : null\n    },\n    'ORD OF': function (a) {\n        return a && a.charCodeAt ? a.charCodeAt(0) : -1;\n    },\n    'CHR OF': function (a) {\n        return String.fromCharCode(a);\n    }\n};\n\n// Node exports.\nmodule.exports = {\n    lol,\n    parser\n};"],"names":["const","parser","require","lol","onDone","onPaused","_scope","_next","_io","visible","var_args","console","log","Error","apply","utils","argsArray","arguments","prompt","message","reply","_isPaused","_done","_paused","_currentNode","_errors","prototype","_waitFor","nodes","f","options","setIt","breakOnReturn","push","slice","results","inProgress","_current","current","self","this","node","shift","_evaluate","ret","_setSymbol","length","_getSpecial","next","errors","pause","pop","resume","tick","go","keepQuiet","call","_error","err","cancel","pos","c","_location","line","first_line","col","first_column","lineEnd","last_line","colEnd","last_column","_push","s","name","symbols","listeners","IT","_pop","popped","msg","getSymbol","scope","i","hasOwnProperty","value","_findScope","isS","indexOf","_findScopeForSpecial","symbol","_setSpecial","_listen","event","action","_emit","brk","j","l","_index","val","index","normalisedIndex","charAt","Object","toString","_setIndex","obj","_evaluateLiteral","done","values","replace","$0","$1","v","replacement","e","_evaluateIndexer","lhs","rhs","vals","_evaluateFunctionCall","args","_callFunction","_evaluateBody","lines","_evaluateIdentifier","_evaluateAssignmentIndex","_evaluateAssignmentNormal","_evaluateAssignment","_name","evaluate","_evaluateDeclaration","_evaluateIf","condition","eIfs","elseIfs","body","eCondition","eBody","elseIfMatched","elseBody","_evaluateNoOp","_evaluateLoopCondition","expression","check","_evaluateLoop","op","finish","loop","broken","sym","command","evalOp","_data","builtIn","_evaluateFunctionDefinition","_evaluateCast","raw","type","toUpperCase","toYarn","Number","_evaluateVisible","_evaluateGimmeh","variable","_evaluateReturn","_evaluateSwitch","it","branches","reverse","fall","b","evalBranch","builtIns","_evaluateBreak","_evaluateBreakpoint","handler","_pushProgramState","_reset","evaluateWatchExpression","tree","error","map","s_","cloneObj","dontReset","_cancel","_isRunning","_go","thisTick","Date","nextTick","setIo","object","a","Array","Math","max","min","reduce","charCodeAt","String","fromCharCode","module","exports"],"mappings":"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"}